#########################################################################################################
[versions]
##### plguins versions #####
# https://plugins.gradle.org/plugin/io.freefair.lombok
lombok-plugin = "8.6"
# https://plugins.gradle.org/plugin/io.freefair.aspectj.post-compile-weaving
post-compile-weaving-plugin = "8.6"
# https://docs.spring.io/dependency-management-plugin/docs/current/reference/html/
spring-dependency-managenent-plugin = "1.1.5"

gretty-v3 = "3.1.3"
gretty = "4.1.4"


##### librarires versions #####

javax-annotation-api = "1.3.2"
javax-inject = "1"
javax-validation-api = "2.0.1.Final"
javax-servlet-api = "4.0.1"
javax-jstl = "1.2"
javax-jaxb-api = "2.3.1"
javax-jaxb-runtime = "2.3.1"
javax-java-time-jsptags = "1.1.4"

jakarta-java-time-jsptags = "2.0.2"

jakarta-servlet-api = "6.0.0"
jakarta-jstl-api = "3.0.0"

jakarta-annotation-api = "2.1.1"

# Spring Recepies 5 책과 완전히 호환되는 마지막 Spring 버전
spring-v5-book = "5.0.20.RELEASE"

# Spring 5.x 의 마지막 버전
spring-v5 = "5.3.36"

# Spring 5.x 의 마지막 스냅샷 버전
spring-v5-snapshot = "5.3.37-SNAPSHOT"

# Spring 최신 버전
spring = "6.1.8"
spring-security-v5 = "5.8.12"
spring-security = "6.3.0"

aspectj = "1.9.22.1"
log4j = "2.23.1"

hsqldb = "2.7.3"
mysql-connector-j = "8.0.33"
ojdbc11 = "23.4.0.24.05"
ojdbc8 = "18.3.0.0"
h2 = "2.2.224"
hikaricp = "5.1.0"



hibernate-v5 = "5.6.15.Final"

spring-data-v2 = "2.7.18"

modelmapper = "3.2.0"

spring-batch-v4 = "4.3.10"

# Spring 5 기반 버전 = https://mvnrepository.com/artifact/org.springframework.ldap/spring-ldap-test/2.4.1
spring-ldap = "2.4.1"

# UnboundID LDAP SDK For Java는 최신을 써도 괜찮은 것 같다.
# https://mvnrepository.com/artifact/com.unboundid/unboundid-ldapsdk
unboundid-ldapsdk = "7.0.0"

# commons-lang을 spring-ldap-test에서 사용함, 버전을 유지할 것!
commons-lang = "2.6"

jackson = "2.17.1"
jackson-databind = "2.17.1"

gson = "2.11.0"

# https://mvnrepository.com/artifact/org.apache.poi/poi
apache-poi = "5.2.5"

# itext 이전버전
# https://mvnrepository.com/artifact/com.lowagie/itext
# itext=4.2.2
# itextpdf의 신버전이 있긴하지만 Spring 5.3.30의 AbstractPdfView가 지원하지 않는다.
# 그래도 아래 소스를 최신 버전을 사용할 수 있게 수정하는 것이 어렵진 않아서 아래 소스 기반으로 CustomAbstractPdfView 라는 것을 만들었다.
# * https://github.com/spring-projects/spring-framework/blob/5.3.x/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractPdfView.java
# https://mvnrepository.com/artifact/com.itextpdf/itextpdf
itextpdf = "5.5.13.3"

# https://mvnrepository.com/artifact/com.rometools/rome
rome = "2.1.0"

# 비동기 처리 : reactor, netty, Spring 5에 맞는 버전으로 설정
# https://mvnrepository.com/artifact/io.projectreactor/reactor-core
reactor-core = "3.4.38"

# https://mvnrepository.com/artifact/io.projectreactor.netty/reactor-netty
reactor-netty = "1.0.45"

junit = "5.10.2"
mockito = "5.12.0"

hamcrest = "2.2"
assertj = "3.26.0"

json-path = "2.9.0"
json-unit = "3.2.7"

# 6.2에도 javax 패키지가 있어서 그것을 사용해도됨 (jakarta, java 둘다 있음.), 6.0.x 버전은 EoL 상태
# hibernateValidatorVersion=6.0.23.Final
hibernate-validator-v6 = "6.2.5.Final"
hibernate-validator = "8.0.1.Final"


# 테스트 환경에서 JSR-303 어노테이션을 테스트 하기위해서는 javax(jakarta) EL 구현 라이브러리가 testRuntimeOnly에 있어야한다.
# https://mvnrepository.com/artifact/org.glassfish/javax.el
# https://docs.jboss.org/hibernate/validator/6.0/reference/en-US/html_single/#validator-gettingstarted-uel
javax-el = "3.0.1-b12"

# https://mvnrepository.com/artifact/org.glassfish/jakarta.el
# https://docs.jboss.org/hibernate/validator/6.2/reference/en-US/html_single/#validator-gettingstarted-uel
# jakartaElVersion은 Hibernate-Validator를 6.2.x로 사용하는 동안은 버전을 올리지 않는다.
jakarta-el = "3.0.4"
# Hibernate-Validator를 8.x로 사용할 때는 jakarta.el 대신에 expressly를 테스트 환경에서 사용하자!
# https://docs.jboss.org/hibernate/validator/8.0/reference/en-US/html_single/#validator-gettingstarted-uel
expressly = "5.0.0"


# https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
findbugs-jsr305 = "3.0.2"

### Thymeleaf ###
# https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
thymeleaf-spring5 = "3.1.2.RELEASE"
thymeleaf-spring6 = "3.1.2.RELEASE"

### WebJars ###
# https://mvnrepository.com/artifact/org.webjars/webjars-locator
webjars-locator = "0.52"
# https://mvnrepository.com/artifact/org.webjars/jquery
webjars-jquery = "3.7.1"
# https://mvnrepository.com/artifact/org.webjars/bootstrap
webjars-bootstrap = "5.3.3"
# https://central.sonatype.com/artifact/org.webjars.bowergithub.semantic-org/semantic-ui
webjars-semantic-ui = "2.5.0"
# https://mvnrepository.com/artifact/org.webjars.npm/webstomp-client
webjars-webstomp-client = "1.2.6"


### Cache ###
# https://mvnrepository.com/artifact/org.ehcache/ehcache
ehcache = "3.10.8"
# https://mvnrepository.com/artifact/net.sf.ehcache/ehcache
ehcache-v2 = "2.10.9.2"
# https://mvnrepository.com/artifact/javax.cache/cache-api
javax-cache-api = "1.1.1"


# https://log4jdbc.brunorozendo.com/
# https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
log4jdbc = "1.16"
# https://mvnrepository.com/artifact/org.mybatis/mybatis
mybatis = "3.5.16"
# https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
mybatis-spring-v2 = "2.1.2"



#########################################################################################################
[libraries]

javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation-api"}
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
javax-validation-api = { module = "javax.validation:validation-api", version.ref = "javax-validation-api"}
javax-servlet-api = { module = "javax.servlet:javax.servlet-api", version.ref = "javax-servlet-api"}
javax-jstl = { module = "javax.servlet:jstl", version.ref = "javax-jstl"}
javax-jaxb-api = { module = "javax.xml.bind:jaxb-api", version.ref = "javax-jaxb-api"}
javax-jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "javax-jaxb-runtime" }
javax-java-time-jsptags = { module = "net.sargue:java-time-jsptags", version.ref = "javax-java-time-jsptags"}
jakarta-java-time-jsptags = { module = "net.sargue:java-time-jsptags", version.ref = "jakarta-java-time-jsptags"}
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakarta-servlet-api" }

# java-time-jsptags의 2.0.2 버전 이후 버전과 함께 사용할 때.. 다음만 같이 추가해주면 된다.
jakarta-jstl-api = { module = "jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api", version.ref = "jakarta-jstl-api" }

jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation-api" }


# Spring 같은 경우는 공통된 버전을 여러개의 Spring 라이브러리가 사용해서, 모듈을 여기에 다 명시하지 않고 
# build.gradle에 module들은 직접 명시하고, bom 만 별도로 관리하는게 나을 것 같다.
spring-bom-v5-book = { module = "org.springframework:spring-framework-bom", version.ref = "spring-v5-book"}
spring-bom-v5 = { module = "org.springframework:spring-framework-bom", version.ref = "spring-v5"}
spring-bom-v5-snapshot = { module = "org.springframework:spring-framework-bom", version.ref = "spring-v5-snapshot"}
spring-bom = { module = "org.springframework:spring-framework-bom", version.ref = "spring"}
spring-security-bom-v5 = { module = "org.springframework.security:spring-security-bom", version.ref = "spring-security-v5"}
spring-security-bom = { module = "org.springframework.security:spring-security-bom", version.ref = "spring-security"}

aspectjweaver = { module = "org.aspectj:aspectjweaver", version.ref = "aspectj"}
aspectjrt = { module = "org.aspectj:aspectjrt", version.ref = "aspectj"}

log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }

hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-connector-j" }
ojdbc11 = { module = "com.oracle.database.jdbc:ojdbc11", version.ref = "ojdbc11" }

# Oracle 드라이버 호환성 문제가 있을지 몰라서, 몇몇 프로젝트는 이전 버전도 다시 사용한 것이 있다.
ojdbc8 = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "ojdbc8" }

h2 = { module = "com.h2database:h2", version.ref = "h2" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }

 
hibernate-entitymanager-v5 = { module = "org.hibernate:hibernate-entitymanager", version.ref = "hibernate-v5" }
hibernate-core-v5 = { module = "org.hibernate:hibernate-core", version.ref = "hibernate-v5" }
hibernate-hikaricp-v5 = { module = "org.hibernate:hibernate-hikaricp", version.ref = "hibernate-v5" }

spring-data-jpa-v2 = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-data-v2" }

modelmapper = { module = "org.modelmapper:modelmapper", version.ref = "modelmapper"}

spring-batch-core-v4 = { module = "org.springframework.batch:spring-batch-core", version.ref = "spring-batch-v4"}

spring-ldap-test = { module = "org.springframework.ldap:spring-ldap-test", version.ref = "spring-ldap" }

unboundid-ldapsdk = { module = "com.unboundid:unboundid-ldapsdk", version.ref = "unboundid-ldapsdk" }

commons-lang = { module = "commons-lang:commons-lang", version.ref = "commons-lang" }

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson-databind" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

apache-poi = { module = "org.apache.poi:poi", version.ref = "apache-poi" }
apache-poi-ooxml = { module = "org.apache.poi:poi-ooxml", version.ref = "apache-poi" }

itextpdf = { module = "com.itextpdf:itextpdf", version.ref = "itextpdf" }

rome = { module = "com.rometools:rome", version.ref = "rome" } 

reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor-core" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-core" }

reactor-netty = { module = "io.projectreactor.netty:reactor-netty", version.ref = "reactor-netty" }


junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }

assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

json-path = { module = "com.jayway.jsonpath:json-path", version.ref = "json-path" }
json-unit = { module = "net.javacrumbs.json-unit:json-unit", version.ref = "json-unit" }

hibernate-validator-v6 = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator-v6" }
hibernate-validator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }

javax-el = { module = "org.glassfish:javax.el", version.ref = "javax-el" }
jakarta-el = { module = "org.glassfish:jakarta.el", version.ref = "jakarta-el" }
expressly = { module = "org.glassfish.expressly:expressly", version.ref = "expressly" }

findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs-jsr305" }

thymeleaf-spring5 = { module = "org.thymeleaf:thymeleaf-spring5", version.ref = "thymeleaf-spring5" }
thymeleaf-spring6 = { module = "org.thymeleaf:thymeleaf-spring6", version.ref = "thymeleaf-spring6" }

thymeleaf-extras-springsecurity5 = { module = "org.thymeleaf.extras:thymeleaf-extras-springsecurity5", version.ref = "thymeleaf-spring5" }
thymeleaf-extras-springsecurity6 = { module = "org.thymeleaf.extras:thymeleaf-extras-springsecurity6", version.ref = "thymeleaf-spring6" }

webjars-locator = { module = "org.webjars:webjars-locator", version.ref = "webjars-locator" }
webjars-jquery = { module = "org.webjars:jquery", version.ref = "webjars-jquery" }
webjars-bootstrap = { module = "org.webjars:bootstrap", version.ref = "webjars-bootstrap" }
webjars-semantic-ui = { module = "org.webjars.bowergithub.semantic-org:semantic-ui", version.ref = "webjars-semantic-ui" }
webjars-webstomp-client = { module = "org.webjars.npm:webstomp-client", version.ref = "webjars-webstomp-client" }


ehcache = { module = "org.ehcache:ehcache", version.ref = "ehcache" }
ehcache-v2 = { module = "net.sf.ehcache:ehcache", version.ref = "ehcache-v2" }
javax-cache-api = { module = "javax.cache:cache-api", version.ref = "javax-cache-api" }

log4jdbc-log4j2-jdbc4 = { module = "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1", version.ref = "log4jdbc" }

mybatis = { module = "org.mybatis:mybatis", version.ref = "mybatis" }
mybatis-spring-v2 = { module = "org.mybatis:mybatis-spring", version.ref = "mybatis-spring-v2" }





#########################################################################################################
[plugins]
lombok = { id = "io.freefair.lombok", version.ref = "lombok-plugin" }
post-compile-weaving = { id = "io.freefair.aspectj.post-compile-weaving", version.ref = "post-compile-weaving-plugin" }

spring-dependency-managenent = { id = "io.spring.dependency-management", version.ref = "spring-dependency-managenent-plugin"}

gretty-v3 = { id = "org.gretty", version.ref = "gretty-v3" }
gretty = { id = "org.gretty", version.ref = "gretty" }

