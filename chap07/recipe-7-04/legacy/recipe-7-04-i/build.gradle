plugins {
  alias(libs.plugins.lombok)
  id 'war'
  alias(libs.plugins.gretty.v3)
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

apply from: "../../../../gradle/default-settings.gradle"

ext {
  // antMatchers().access("문자열 파라미터 전달가능") 이 가능한 마지막 버전은 5.4.11
  // springSecurityVersion = '5.4.11'
  // springSecurityVersion ='5.3.13.RELEASE'
  springSecurityVersion ='5.0.19.RELEASE'
  // ✨ Spring은 5 버전대의 최신을 사용하면서 Security는 이전 버전을 사용하는 상태인데, 
  //    동작에는 문제가 없어보이긴한데... 이상 있을 때, 다시 확인하자!
}

dependencies {
  implementation enforcedPlatform(libs.spring.bom.v5)
  // ext에 정의한 스프링 시큐리티의 이전 버전 사용을 위해 이 BOM은 TOML을 사용하지 않는다.
  implementation enforcedPlatform("org.springframework.security:spring-security-bom:${springSecurityVersion}")

  implementation 'org.springframework:spring-context'
  implementation 'org.springframework:spring-webmvc'
  implementation 'org.springframework:spring-jdbc'

  runtimeOnly (libs.hsqldb)

  implementation 'org.springframework.security:spring-security-config'
  implementation 'org.springframework.security:spring-security-web'

  implementation (libs.javax.annotation.api)
  compileOnly (libs.javax.servlet.api)

  implementation (libs.hibernate.validator.v6)
  testRuntimeOnly (libs.javax.el)

  implementation (libs.thymeleaf.spring5)
  implementation (libs.thymeleaf.extras.springsecurity5)

  implementation (libs.webjars.locator)
  implementation (libs.webjars.bootstrap)
  implementation (libs.webjars.semantic.ui)

  testImplementation (libs.javax.servlet.api)
  testImplementation 'org.springframework:spring-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.springframework:spring-webflux'
  testImplementation (libs.hamcrest)
}

apply from: "../../../../gradle/gretty-settings.gradle"